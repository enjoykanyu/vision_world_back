// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.20.1
// source: proto/audit/v1/audit.proto

package auditv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 内容类型
type ContentType int32

const (
	ContentType_CONTENT_TYPE_UNSPECIFIED ContentType = 0
	ContentType_CONTENT_TYPE_TEXT        ContentType = 1 // 文本
	ContentType_CONTENT_TYPE_IMAGE       ContentType = 2 // 图片
	ContentType_CONTENT_TYPE_VIDEO       ContentType = 3 // 视频
	ContentType_CONTENT_TYPE_AUDIO       ContentType = 4 // 音频
	ContentType_CONTENT_TYPE_DOCUMENT    ContentType = 5 // 文档
	ContentType_CONTENT_TYPE_LIVE        ContentType = 6 // 直播
	ContentType_CONTENT_TYPE_COMMENT     ContentType = 7 // 评论
	ContentType_CONTENT_TYPE_PROFILE     ContentType = 8 // 个人资料
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "CONTENT_TYPE_UNSPECIFIED",
		1: "CONTENT_TYPE_TEXT",
		2: "CONTENT_TYPE_IMAGE",
		3: "CONTENT_TYPE_VIDEO",
		4: "CONTENT_TYPE_AUDIO",
		5: "CONTENT_TYPE_DOCUMENT",
		6: "CONTENT_TYPE_LIVE",
		7: "CONTENT_TYPE_COMMENT",
		8: "CONTENT_TYPE_PROFILE",
	}
	ContentType_value = map[string]int32{
		"CONTENT_TYPE_UNSPECIFIED": 0,
		"CONTENT_TYPE_TEXT":        1,
		"CONTENT_TYPE_IMAGE":       2,
		"CONTENT_TYPE_VIDEO":       3,
		"CONTENT_TYPE_AUDIO":       4,
		"CONTENT_TYPE_DOCUMENT":    5,
		"CONTENT_TYPE_LIVE":        6,
		"CONTENT_TYPE_COMMENT":     7,
		"CONTENT_TYPE_PROFILE":     8,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_audit_v1_audit_proto_enumTypes[0].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_proto_audit_v1_audit_proto_enumTypes[0]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{0}
}

// 审核状态
type AuditStatus int32

const (
	AuditStatus_AUDIT_STATUS_UNSPECIFIED    AuditStatus = 0
	AuditStatus_AUDIT_STATUS_PENDING        AuditStatus = 1 // 待审核
	AuditStatus_AUDIT_STATUS_UNDER_REVIEW   AuditStatus = 2 // 审核中
	AuditStatus_AUDIT_STATUS_PENDING_MANUAL AuditStatus = 3 // 待人工审核
	AuditStatus_AUDIT_STATUS_PASSED         AuditStatus = 4 // 通过
	AuditStatus_AUDIT_STATUS_REJECTED       AuditStatus = 5 // 拒绝
	AuditStatus_AUDIT_STATUS_EXPIRED        AuditStatus = 6 // 过期
)

// Enum value maps for AuditStatus.
var (
	AuditStatus_name = map[int32]string{
		0: "AUDIT_STATUS_UNSPECIFIED",
		1: "AUDIT_STATUS_PENDING",
		2: "AUDIT_STATUS_UNDER_REVIEW",
		3: "AUDIT_STATUS_PENDING_MANUAL",
		4: "AUDIT_STATUS_PASSED",
		5: "AUDIT_STATUS_REJECTED",
		6: "AUDIT_STATUS_EXPIRED",
	}
	AuditStatus_value = map[string]int32{
		"AUDIT_STATUS_UNSPECIFIED":    0,
		"AUDIT_STATUS_PENDING":        1,
		"AUDIT_STATUS_UNDER_REVIEW":   2,
		"AUDIT_STATUS_PENDING_MANUAL": 3,
		"AUDIT_STATUS_PASSED":         4,
		"AUDIT_STATUS_REJECTED":       5,
		"AUDIT_STATUS_EXPIRED":        6,
	}
)

func (x AuditStatus) Enum() *AuditStatus {
	p := new(AuditStatus)
	*p = x
	return p
}

func (x AuditStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_audit_v1_audit_proto_enumTypes[1].Descriptor()
}

func (AuditStatus) Type() protoreflect.EnumType {
	return &file_proto_audit_v1_audit_proto_enumTypes[1]
}

func (x AuditStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditStatus.Descriptor instead.
func (AuditStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{1}
}

// 违规等级
type AuditLevel int32

const (
	AuditLevel_AUDIT_LEVEL_UNSPECIFIED AuditLevel = 0
	AuditLevel_AUDIT_LEVEL_LOW         AuditLevel = 1 // 低风险
	AuditLevel_AUDIT_LEVEL_MEDIUM      AuditLevel = 2 // 中风险
	AuditLevel_AUDIT_LEVEL_HIGH        AuditLevel = 3 // 高风险
	AuditLevel_AUDIT_LEVEL_CRITICAL    AuditLevel = 4 // 严重风险
)

// Enum value maps for AuditLevel.
var (
	AuditLevel_name = map[int32]string{
		0: "AUDIT_LEVEL_UNSPECIFIED",
		1: "AUDIT_LEVEL_LOW",
		2: "AUDIT_LEVEL_MEDIUM",
		3: "AUDIT_LEVEL_HIGH",
		4: "AUDIT_LEVEL_CRITICAL",
	}
	AuditLevel_value = map[string]int32{
		"AUDIT_LEVEL_UNSPECIFIED": 0,
		"AUDIT_LEVEL_LOW":         1,
		"AUDIT_LEVEL_MEDIUM":      2,
		"AUDIT_LEVEL_HIGH":        3,
		"AUDIT_LEVEL_CRITICAL":    4,
	}
)

func (x AuditLevel) Enum() *AuditLevel {
	p := new(AuditLevel)
	*p = x
	return p
}

func (x AuditLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_audit_v1_audit_proto_enumTypes[2].Descriptor()
}

func (AuditLevel) Type() protoreflect.EnumType {
	return &file_proto_audit_v1_audit_proto_enumTypes[2]
}

func (x AuditLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLevel.Descriptor instead.
func (AuditLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{2}
}

// 提交内容审核请求
type SubmitContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                                        // 内容ID
	ContentType   ContentType            `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"`                       // 内容类型
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                                                                             // 内容
	UploaderId    uint64                 `protobuf:"varint,4,opt,name=uploader_id,json=uploaderId,proto3" json:"uploader_id,omitempty"`                                                    // 上传者ID
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 元数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitContentRequest) Reset() {
	*x = SubmitContentRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitContentRequest) ProtoMessage() {}

func (x *SubmitContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitContentRequest.ProtoReflect.Descriptor instead.
func (*SubmitContentRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitContentRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *SubmitContentRequest) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *SubmitContentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SubmitContentRequest) GetUploaderId() uint64 {
	if x != nil {
		return x.UploaderId
	}
	return 0
}

func (x *SubmitContentRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 提交内容审核响应
type SubmitContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditId       uint64                 `protobuf:"varint,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`          // 审核ID
	Status        AuditStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=audit.v1.AuditStatus" json:"status,omitempty"` // 审核状态
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                            // 审核原因
	Level         AuditLevel             `protobuf:"varint,4,opt,name=level,proto3,enum=audit.v1.AuditLevel" json:"level,omitempty"`    // 违规等级
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`     // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitContentResponse) Reset() {
	*x = SubmitContentResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitContentResponse) ProtoMessage() {}

func (x *SubmitContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitContentResponse.ProtoReflect.Descriptor instead.
func (*SubmitContentResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitContentResponse) GetAuditId() uint64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *SubmitContentResponse) GetStatus() AuditStatus {
	if x != nil {
		return x.Status
	}
	return AuditStatus_AUDIT_STATUS_UNSPECIFIED
}

func (x *SubmitContentResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SubmitContentResponse) GetLevel() AuditLevel {
	if x != nil {
		return x.Level
	}
	return AuditLevel_AUDIT_LEVEL_UNSPECIFIED
}

func (x *SubmitContentResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// 获取审核结果请求
type GetAuditResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditId       uint64                 `protobuf:"varint,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"` // 审核ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditResultRequest) Reset() {
	*x = GetAuditResultRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditResultRequest) ProtoMessage() {}

func (x *GetAuditResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditResultRequest.ProtoReflect.Descriptor instead.
func (*GetAuditResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{2}
}

func (x *GetAuditResultRequest) GetAuditId() uint64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

// 获取审核结果响应
type GetAuditResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditId       uint64                 `protobuf:"varint,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`                                       // 审核ID
	ContentId     string                 `protobuf:"bytes,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                  // 内容ID
	ContentType   ContentType            `protobuf:"varint,3,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"` // 内容类型
	Status        AuditStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=audit.v1.AuditStatus" json:"status,omitempty"`                              // 审核状态
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`                                                         // 审核原因
	Level         AuditLevel             `protobuf:"varint,6,opt,name=level,proto3,enum=audit.v1.AuditLevel" json:"level,omitempty"`                                 // 违规等级
	ReviewerId    uint64                 `protobuf:"varint,7,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"`                              // 审核员ID
	ReviewedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=reviewed_at,json=reviewedAt,proto3" json:"reviewed_at,omitempty"`                               // 审核时间
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                  // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditResultResponse) Reset() {
	*x = GetAuditResultResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditResultResponse) ProtoMessage() {}

func (x *GetAuditResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditResultResponse.ProtoReflect.Descriptor instead.
func (*GetAuditResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{3}
}

func (x *GetAuditResultResponse) GetAuditId() uint64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *GetAuditResultResponse) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *GetAuditResultResponse) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *GetAuditResultResponse) GetStatus() AuditStatus {
	if x != nil {
		return x.Status
	}
	return AuditStatus_AUDIT_STATUS_UNSPECIFIED
}

func (x *GetAuditResultResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetAuditResultResponse) GetLevel() AuditLevel {
	if x != nil {
		return x.Level
	}
	return AuditLevel_AUDIT_LEVEL_UNSPECIFIED
}

func (x *GetAuditResultResponse) GetReviewerId() uint64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

func (x *GetAuditResultResponse) GetReviewedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewedAt
	}
	return nil
}

func (x *GetAuditResultResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// 更新审核状态请求
type UpdateAuditStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditId       uint64                 `protobuf:"varint,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`          // 审核ID
	Status        AuditStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=audit.v1.AuditStatus" json:"status,omitempty"` // 审核状态
	ReviewerId    uint64                 `protobuf:"varint,3,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"` // 审核员ID
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                            // 审核原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAuditStatusRequest) Reset() {
	*x = UpdateAuditStatusRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAuditStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuditStatusRequest) ProtoMessage() {}

func (x *UpdateAuditStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuditStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuditStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAuditStatusRequest) GetAuditId() uint64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *UpdateAuditStatusRequest) GetStatus() AuditStatus {
	if x != nil {
		return x.Status
	}
	return AuditStatus_AUDIT_STATUS_UNSPECIFIED
}

func (x *UpdateAuditStatusRequest) GetReviewerId() uint64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

func (x *UpdateAuditStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 更新审核状态响应
type UpdateAuditStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAuditStatusResponse) Reset() {
	*x = UpdateAuditStatusResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAuditStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuditStatusResponse) ProtoMessage() {}

func (x *UpdateAuditStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuditStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateAuditStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAuditStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateAuditStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取审核记录列表请求
type ListAuditRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentType   ContentType            `protobuf:"varint,1,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"` // 内容类型
	Status        AuditStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=audit.v1.AuditStatus" json:"status,omitempty"`                              // 审核状态
	Level         AuditLevel             `protobuf:"varint,3,opt,name=level,proto3,enum=audit.v1.AuditLevel" json:"level,omitempty"`                                 // 违规等级
	UploaderId    uint64                 `protobuf:"varint,4,opt,name=uploader_id,json=uploaderId,proto3" json:"uploader_id,omitempty"`                              // 上传者ID
	ReviewerId    uint64                 `protobuf:"varint,5,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"`                              // 审核员ID
	StartDate     string                 `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`                                  // 开始日期
	EndDate       string                 `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`                                        // 结束日期
	Page          int32                  `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`                                                            // 页码
	PageSize      int32                  `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                    // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuditRecordsRequest) Reset() {
	*x = ListAuditRecordsRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuditRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditRecordsRequest) ProtoMessage() {}

func (x *ListAuditRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditRecordsRequest.ProtoReflect.Descriptor instead.
func (*ListAuditRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{6}
}

func (x *ListAuditRecordsRequest) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *ListAuditRecordsRequest) GetStatus() AuditStatus {
	if x != nil {
		return x.Status
	}
	return AuditStatus_AUDIT_STATUS_UNSPECIFIED
}

func (x *ListAuditRecordsRequest) GetLevel() AuditLevel {
	if x != nil {
		return x.Level
	}
	return AuditLevel_AUDIT_LEVEL_UNSPECIFIED
}

func (x *ListAuditRecordsRequest) GetUploaderId() uint64 {
	if x != nil {
		return x.UploaderId
	}
	return 0
}

func (x *ListAuditRecordsRequest) GetReviewerId() uint64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

func (x *ListAuditRecordsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListAuditRecordsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListAuditRecordsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAuditRecordsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 审核记录
type AuditRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditId       uint64                 `protobuf:"varint,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`                                       // 审核ID
	ContentId     string                 `protobuf:"bytes,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                  // 内容ID
	ContentType   ContentType            `protobuf:"varint,3,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"` // 内容类型
	Status        AuditStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=audit.v1.AuditStatus" json:"status,omitempty"`                              // 审核状态
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`                                                         // 审核原因
	Level         AuditLevel             `protobuf:"varint,6,opt,name=level,proto3,enum=audit.v1.AuditLevel" json:"level,omitempty"`                                 // 违规等级
	UploaderId    uint64                 `protobuf:"varint,7,opt,name=uploader_id,json=uploaderId,proto3" json:"uploader_id,omitempty"`                              // 上传者ID
	ReviewerId    uint64                 `protobuf:"varint,8,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"`                              // 审核员ID
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                  // 创建时间
	ReviewedAt    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=reviewed_at,json=reviewedAt,proto3" json:"reviewed_at,omitempty"`                              // 审核时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditRecord) Reset() {
	*x = AuditRecord{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRecord) ProtoMessage() {}

func (x *AuditRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRecord.ProtoReflect.Descriptor instead.
func (*AuditRecord) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{7}
}

func (x *AuditRecord) GetAuditId() uint64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *AuditRecord) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *AuditRecord) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *AuditRecord) GetStatus() AuditStatus {
	if x != nil {
		return x.Status
	}
	return AuditStatus_AUDIT_STATUS_UNSPECIFIED
}

func (x *AuditRecord) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AuditRecord) GetLevel() AuditLevel {
	if x != nil {
		return x.Level
	}
	return AuditLevel_AUDIT_LEVEL_UNSPECIFIED
}

func (x *AuditRecord) GetUploaderId() uint64 {
	if x != nil {
		return x.UploaderId
	}
	return 0
}

func (x *AuditRecord) GetReviewerId() uint64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

func (x *AuditRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AuditRecord) GetReviewedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewedAt
	}
	return nil
}

// 获取审核记录列表响应
type ListAuditRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	Records       []*AuditRecord         `protobuf:"bytes,4,rep,name=records,proto3" json:"records,omitempty"`                    // 审核记录列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuditRecordsResponse) Reset() {
	*x = ListAuditRecordsResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuditRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditRecordsResponse) ProtoMessage() {}

func (x *ListAuditRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditRecordsResponse.ProtoReflect.Descriptor instead.
func (*ListAuditRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{8}
}

func (x *ListAuditRecordsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAuditRecordsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAuditRecordsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAuditRecordsResponse) GetRecords() []*AuditRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// 添加到白名单请求
type AddToWhitelistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                  // 内容ID
	ContentType   ContentType            `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"` // 内容类型
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                                                         // 原因
	CreatedBy     uint64                 `protobuf:"varint,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`                                 // 创建者ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToWhitelistRequest) Reset() {
	*x = AddToWhitelistRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToWhitelistRequest) ProtoMessage() {}

func (x *AddToWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToWhitelistRequest.ProtoReflect.Descriptor instead.
func (*AddToWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{9}
}

func (x *AddToWhitelistRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *AddToWhitelistRequest) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *AddToWhitelistRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AddToWhitelistRequest) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

// 添加到白名单响应
type AddToWhitelistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToWhitelistResponse) Reset() {
	*x = AddToWhitelistResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToWhitelistResponse) ProtoMessage() {}

func (x *AddToWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToWhitelistResponse.ProtoReflect.Descriptor instead.
func (*AddToWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{10}
}

func (x *AddToWhitelistResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddToWhitelistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 从白名单移除请求
type RemoveFromWhitelistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // 内容ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromWhitelistRequest) Reset() {
	*x = RemoveFromWhitelistRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromWhitelistRequest) ProtoMessage() {}

func (x *RemoveFromWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromWhitelistRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveFromWhitelistRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

// 从白名单移除响应
type RemoveFromWhitelistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromWhitelistResponse) Reset() {
	*x = RemoveFromWhitelistResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromWhitelistResponse) ProtoMessage() {}

func (x *RemoveFromWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromWhitelistResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveFromWhitelistResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveFromWhitelistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 添加到黑名单请求
type AddToBlacklistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                  // 内容ID
	ContentType   ContentType            `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"` // 内容类型
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                                                         // 原因
	CreatedBy     uint64                 `protobuf:"varint,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`                                 // 创建者ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToBlacklistRequest) Reset() {
	*x = AddToBlacklistRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBlacklistRequest) ProtoMessage() {}

func (x *AddToBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBlacklistRequest.ProtoReflect.Descriptor instead.
func (*AddToBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{13}
}

func (x *AddToBlacklistRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *AddToBlacklistRequest) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *AddToBlacklistRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AddToBlacklistRequest) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

// 添加到黑名单响应
type AddToBlacklistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToBlacklistResponse) Reset() {
	*x = AddToBlacklistResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBlacklistResponse) ProtoMessage() {}

func (x *AddToBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBlacklistResponse.ProtoReflect.Descriptor instead.
func (*AddToBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{14}
}

func (x *AddToBlacklistResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddToBlacklistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 从黑名单移除请求
type RemoveFromBlacklistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentId     string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // 内容ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromBlacklistRequest) Reset() {
	*x = RemoveFromBlacklistRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBlacklistRequest) ProtoMessage() {}

func (x *RemoveFromBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBlacklistRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveFromBlacklistRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

// 从黑名单移除响应
type RemoveFromBlacklistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromBlacklistResponse) Reset() {
	*x = RemoveFromBlacklistResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBlacklistResponse) ProtoMessage() {}

func (x *RemoveFromBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBlacklistResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveFromBlacklistResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveFromBlacklistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取人工审核队列请求
type GetManualReviewQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentType   ContentType            `protobuf:"varint,1,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"` // 内容类型
	Level         AuditLevel             `protobuf:"varint,2,opt,name=level,proto3,enum=audit.v1.AuditLevel" json:"level,omitempty"`                                 // 违规等级
	Priority      int32                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`                                                    // 优先级
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                                                            // 页码
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                    // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManualReviewQueueRequest) Reset() {
	*x = GetManualReviewQueueRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManualReviewQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManualReviewQueueRequest) ProtoMessage() {}

func (x *GetManualReviewQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManualReviewQueueRequest.ProtoReflect.Descriptor instead.
func (*GetManualReviewQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{17}
}

func (x *GetManualReviewQueueRequest) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *GetManualReviewQueueRequest) GetLevel() AuditLevel {
	if x != nil {
		return x.Level
	}
	return AuditLevel_AUDIT_LEVEL_UNSPECIFIED
}

func (x *GetManualReviewQueueRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *GetManualReviewQueueRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetManualReviewQueueRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取人工审核队列响应
type GetManualReviewQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	Records       []*AuditRecord         `protobuf:"bytes,4,rep,name=records,proto3" json:"records,omitempty"`                    // 审核记录列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetManualReviewQueueResponse) Reset() {
	*x = GetManualReviewQueueResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetManualReviewQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManualReviewQueueResponse) ProtoMessage() {}

func (x *GetManualReviewQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManualReviewQueueResponse.ProtoReflect.Descriptor instead.
func (*GetManualReviewQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{18}
}

func (x *GetManualReviewQueueResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetManualReviewQueueResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetManualReviewQueueResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetManualReviewQueueResponse) GetRecords() []*AuditRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// 分配人工审核请求
type AssignManualReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuditId       uint64                 `protobuf:"varint,1,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`          // 审核ID
	ReviewerId    uint64                 `protobuf:"varint,2,opt,name=reviewer_id,json=reviewerId,proto3" json:"reviewer_id,omitempty"` // 审核员ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignManualReviewRequest) Reset() {
	*x = AssignManualReviewRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignManualReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignManualReviewRequest) ProtoMessage() {}

func (x *AssignManualReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignManualReviewRequest.ProtoReflect.Descriptor instead.
func (*AssignManualReviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{19}
}

func (x *AssignManualReviewRequest) GetAuditId() uint64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *AssignManualReviewRequest) GetReviewerId() uint64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

// 分配人工审核响应
type AssignManualReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignManualReviewResponse) Reset() {
	*x = AssignManualReviewResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignManualReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignManualReviewResponse) ProtoMessage() {}

func (x *AssignManualReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignManualReviewResponse.ProtoReflect.Descriptor instead.
func (*AssignManualReviewResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{20}
}

func (x *AssignManualReviewResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AssignManualReviewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 按状态统计
type StatusCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        AuditStatus            `protobuf:"varint,1,opt,name=status,proto3,enum=audit.v1.AuditStatus" json:"status,omitempty"` // 审核状态
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                             // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusCount) Reset() {
	*x = StatusCount{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCount) ProtoMessage() {}

func (x *StatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCount.ProtoReflect.Descriptor instead.
func (*StatusCount) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{21}
}

func (x *StatusCount) GetStatus() AuditStatus {
	if x != nil {
		return x.Status
	}
	return AuditStatus_AUDIT_STATUS_UNSPECIFIED
}

func (x *StatusCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 按违规等级统计
type LevelCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         AuditLevel             `protobuf:"varint,1,opt,name=level,proto3,enum=audit.v1.AuditLevel" json:"level,omitempty"` // 违规等级
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                          // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LevelCount) Reset() {
	*x = LevelCount{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelCount) ProtoMessage() {}

func (x *LevelCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelCount.ProtoReflect.Descriptor instead.
func (*LevelCount) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{22}
}

func (x *LevelCount) GetLevel() AuditLevel {
	if x != nil {
		return x.Level
	}
	return AuditLevel_AUDIT_LEVEL_UNSPECIFIED
}

func (x *LevelCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 按内容类型统计
type TypeCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContentType   ContentType            `protobuf:"varint,1,opt,name=content_type,json=contentType,proto3,enum=audit.v1.ContentType" json:"content_type,omitempty"` // 内容类型
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                                                          // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeCount) Reset() {
	*x = TypeCount{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeCount) ProtoMessage() {}

func (x *TypeCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeCount.ProtoReflect.Descriptor instead.
func (*TypeCount) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{23}
}

func (x *TypeCount) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *TypeCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 获取审核统计请求
type GetAuditStatisticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     string                 `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // 开始日期
	EndDate       string                 `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // 结束日期
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditStatisticsRequest) Reset() {
	*x = GetAuditStatisticsRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditStatisticsRequest) ProtoMessage() {}

func (x *GetAuditStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetAuditStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{24}
}

func (x *GetAuditStatisticsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetAuditStatisticsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// 获取审核统计响应
type GetAuditStatisticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalCount    int64                  `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`   // 总审核数
	PassRate      float64                `protobuf:"fixed64,2,opt,name=pass_rate,json=passRate,proto3" json:"pass_rate,omitempty"`        // 通过率
	StatusStats   []*StatusCount         `protobuf:"bytes,3,rep,name=status_stats,json=statusStats,proto3" json:"status_stats,omitempty"` // 按状态统计
	LevelStats    []*LevelCount          `protobuf:"bytes,4,rep,name=level_stats,json=levelStats,proto3" json:"level_stats,omitempty"`    // 按违规等级统计
	TypeStats     []*TypeCount           `protobuf:"bytes,5,rep,name=type_stats,json=typeStats,proto3" json:"type_stats,omitempty"`       // 按内容类型统计
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditStatisticsResponse) Reset() {
	*x = GetAuditStatisticsResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditStatisticsResponse) ProtoMessage() {}

func (x *GetAuditStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetAuditStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{25}
}

func (x *GetAuditStatisticsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetAuditStatisticsResponse) GetPassRate() float64 {
	if x != nil {
		return x.PassRate
	}
	return 0
}

func (x *GetAuditStatisticsResponse) GetStatusStats() []*StatusCount {
	if x != nil {
		return x.StatusStats
	}
	return nil
}

func (x *GetAuditStatisticsResponse) GetLevelStats() []*LevelCount {
	if x != nil {
		return x.LevelStats
	}
	return nil
}

func (x *GetAuditStatisticsResponse) GetTypeStats() []*TypeCount {
	if x != nil {
		return x.TypeStats
	}
	return nil
}

// 违规趋势
type ViolationTrend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`    // 日期
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViolationTrend) Reset() {
	*x = ViolationTrend{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViolationTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViolationTrend) ProtoMessage() {}

func (x *ViolationTrend) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViolationTrend.ProtoReflect.Descriptor instead.
func (*ViolationTrend) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{26}
}

func (x *ViolationTrend) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ViolationTrend) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 获取违规趋势请求
type GetViolationTrendsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     string                 `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // 开始日期
	EndDate       string                 `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // 结束日期
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViolationTrendsRequest) Reset() {
	*x = GetViolationTrendsRequest{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViolationTrendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViolationTrendsRequest) ProtoMessage() {}

func (x *GetViolationTrendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViolationTrendsRequest.ProtoReflect.Descriptor instead.
func (*GetViolationTrendsRequest) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{27}
}

func (x *GetViolationTrendsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetViolationTrendsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// 获取违规趋势响应
type GetViolationTrendsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trends        []*ViolationTrend      `protobuf:"bytes,1,rep,name=trends,proto3" json:"trends,omitempty"` // 违规趋势
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViolationTrendsResponse) Reset() {
	*x = GetViolationTrendsResponse{}
	mi := &file_proto_audit_v1_audit_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViolationTrendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViolationTrendsResponse) ProtoMessage() {}

func (x *GetViolationTrendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_audit_v1_audit_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViolationTrendsResponse.ProtoReflect.Descriptor instead.
func (*GetViolationTrendsResponse) Descriptor() ([]byte, []int) {
	return file_proto_audit_v1_audit_proto_rawDescGZIP(), []int{28}
}

func (x *GetViolationTrendsResponse) GetTrends() []*ViolationTrend {
	if x != nil {
		return x.Trends
	}
	return nil
}

var File_proto_audit_v1_audit_proto protoreflect.FileDescriptor

const file_proto_audit_v1_audit_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/audit/v1/audit.proto\x12\baudit.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xb1\x02\n" +
	"\x14SubmitContentRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\x128\n" +
	"\fcontent_type\x18\x02 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1f\n" +
	"\vuploader_id\x18\x04 \x01(\x04R\n" +
	"uploaderId\x12H\n" +
	"\bmetadata\x18\x05 \x03(\v2,.audit.v1.SubmitContentRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x01\n" +
	"\x15SubmitContentResponse\x12\x19\n" +
	"\baudit_id\x18\x01 \x01(\x04R\aauditId\x12-\n" +
	"\x06status\x18\x02 \x01(\x0e2\x15.audit.v1.AuditStatusR\x06status\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12*\n" +
	"\x05level\x18\x04 \x01(\x0e2\x14.audit.v1.AuditLevelR\x05level\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"2\n" +
	"\x15GetAuditResultRequest\x12\x19\n" +
	"\baudit_id\x18\x01 \x01(\x04R\aauditId\"\x98\x03\n" +
	"\x16GetAuditResultResponse\x12\x19\n" +
	"\baudit_id\x18\x01 \x01(\x04R\aauditId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x02 \x01(\tR\tcontentId\x128\n" +
	"\fcontent_type\x18\x03 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12-\n" +
	"\x06status\x18\x04 \x01(\x0e2\x15.audit.v1.AuditStatusR\x06status\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12*\n" +
	"\x05level\x18\x06 \x01(\x0e2\x14.audit.v1.AuditLevelR\x05level\x12\x1f\n" +
	"\vreviewer_id\x18\a \x01(\x04R\n" +
	"reviewerId\x12;\n" +
	"\vreviewed_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"reviewedAt\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x9d\x01\n" +
	"\x18UpdateAuditStatusRequest\x12\x19\n" +
	"\baudit_id\x18\x01 \x01(\x04R\aauditId\x12-\n" +
	"\x06status\x18\x02 \x01(\x0e2\x15.audit.v1.AuditStatusR\x06status\x12\x1f\n" +
	"\vreviewer_id\x18\x03 \x01(\x04R\n" +
	"reviewerId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"O\n" +
	"\x19UpdateAuditStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xdb\x02\n" +
	"\x17ListAuditRecordsRequest\x128\n" +
	"\fcontent_type\x18\x01 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12-\n" +
	"\x06status\x18\x02 \x01(\x0e2\x15.audit.v1.AuditStatusR\x06status\x12*\n" +
	"\x05level\x18\x03 \x01(\x0e2\x14.audit.v1.AuditLevelR\x05level\x12\x1f\n" +
	"\vuploader_id\x18\x04 \x01(\x04R\n" +
	"uploaderId\x12\x1f\n" +
	"\vreviewer_id\x18\x05 \x01(\x04R\n" +
	"reviewerId\x12\x1d\n" +
	"\n" +
	"start_date\x18\x06 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\a \x01(\tR\aendDate\x12\x12\n" +
	"\x04page\x18\b \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\t \x01(\x05R\bpageSize\"\xae\x03\n" +
	"\vAuditRecord\x12\x19\n" +
	"\baudit_id\x18\x01 \x01(\x04R\aauditId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x02 \x01(\tR\tcontentId\x128\n" +
	"\fcontent_type\x18\x03 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12-\n" +
	"\x06status\x18\x04 \x01(\x0e2\x15.audit.v1.AuditStatusR\x06status\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12*\n" +
	"\x05level\x18\x06 \x01(\x0e2\x14.audit.v1.AuditLevelR\x05level\x12\x1f\n" +
	"\vuploader_id\x18\a \x01(\x04R\n" +
	"uploaderId\x12\x1f\n" +
	"\vreviewer_id\x18\b \x01(\x04R\n" +
	"reviewerId\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12;\n" +
	"\vreviewed_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"reviewedAt\"\x92\x01\n" +
	"\x18ListAuditRecordsResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12/\n" +
	"\arecords\x18\x04 \x03(\v2\x15.audit.v1.AuditRecordR\arecords\"\xa7\x01\n" +
	"\x15AddToWhitelistRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\x128\n" +
	"\fcontent_type\x18\x02 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\x04R\tcreatedBy\"L\n" +
	"\x16AddToWhitelistResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\";\n" +
	"\x1aRemoveFromWhitelistRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\"Q\n" +
	"\x1bRemoveFromWhitelistResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa7\x01\n" +
	"\x15AddToBlacklistRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\x128\n" +
	"\fcontent_type\x18\x02 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\x04R\tcreatedBy\"L\n" +
	"\x16AddToBlacklistResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\";\n" +
	"\x1aRemoveFromBlacklistRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\"Q\n" +
	"\x1bRemoveFromBlacklistResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xd0\x01\n" +
	"\x1bGetManualReviewQueueRequest\x128\n" +
	"\fcontent_type\x18\x01 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12*\n" +
	"\x05level\x18\x02 \x01(\x0e2\x14.audit.v1.AuditLevelR\x05level\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x05R\bpriority\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"\x96\x01\n" +
	"\x1cGetManualReviewQueueResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12/\n" +
	"\arecords\x18\x04 \x03(\v2\x15.audit.v1.AuditRecordR\arecords\"W\n" +
	"\x19AssignManualReviewRequest\x12\x19\n" +
	"\baudit_id\x18\x01 \x01(\x04R\aauditId\x12\x1f\n" +
	"\vreviewer_id\x18\x02 \x01(\x04R\n" +
	"reviewerId\"P\n" +
	"\x1aAssignManualReviewResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"R\n" +
	"\vStatusCount\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.audit.v1.AuditStatusR\x06status\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"N\n" +
	"\n" +
	"LevelCount\x12*\n" +
	"\x05level\x18\x01 \x01(\x0e2\x14.audit.v1.AuditLevelR\x05level\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"[\n" +
	"\tTypeCount\x128\n" +
	"\fcontent_type\x18\x01 \x01(\x0e2\x15.audit.v1.ContentTypeR\vcontentType\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"U\n" +
	"\x19GetAuditStatisticsRequest\x12\x1d\n" +
	"\n" +
	"start_date\x18\x01 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x02 \x01(\tR\aendDate\"\xff\x01\n" +
	"\x1aGetAuditStatisticsResponse\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\x03R\n" +
	"totalCount\x12\x1b\n" +
	"\tpass_rate\x18\x02 \x01(\x01R\bpassRate\x128\n" +
	"\fstatus_stats\x18\x03 \x03(\v2\x15.audit.v1.StatusCountR\vstatusStats\x125\n" +
	"\vlevel_stats\x18\x04 \x03(\v2\x14.audit.v1.LevelCountR\n" +
	"levelStats\x122\n" +
	"\n" +
	"type_stats\x18\x05 \x03(\v2\x13.audit.v1.TypeCountR\ttypeStats\":\n" +
	"\x0eViolationTrend\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"U\n" +
	"\x19GetViolationTrendsRequest\x12\x1d\n" +
	"\n" +
	"start_date\x18\x01 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x02 \x01(\tR\aendDate\"N\n" +
	"\x1aGetViolationTrendsResponse\x120\n" +
	"\x06trends\x18\x01 \x03(\v2\x18.audit.v1.ViolationTrendR\x06trends*\xf0\x01\n" +
	"\vContentType\x12\x1c\n" +
	"\x18CONTENT_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CONTENT_TYPE_TEXT\x10\x01\x12\x16\n" +
	"\x12CONTENT_TYPE_IMAGE\x10\x02\x12\x16\n" +
	"\x12CONTENT_TYPE_VIDEO\x10\x03\x12\x16\n" +
	"\x12CONTENT_TYPE_AUDIO\x10\x04\x12\x19\n" +
	"\x15CONTENT_TYPE_DOCUMENT\x10\x05\x12\x15\n" +
	"\x11CONTENT_TYPE_LIVE\x10\x06\x12\x18\n" +
	"\x14CONTENT_TYPE_COMMENT\x10\a\x12\x18\n" +
	"\x14CONTENT_TYPE_PROFILE\x10\b*\xd3\x01\n" +
	"\vAuditStatus\x12\x1c\n" +
	"\x18AUDIT_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14AUDIT_STATUS_PENDING\x10\x01\x12\x1d\n" +
	"\x19AUDIT_STATUS_UNDER_REVIEW\x10\x02\x12\x1f\n" +
	"\x1bAUDIT_STATUS_PENDING_MANUAL\x10\x03\x12\x17\n" +
	"\x13AUDIT_STATUS_PASSED\x10\x04\x12\x19\n" +
	"\x15AUDIT_STATUS_REJECTED\x10\x05\x12\x18\n" +
	"\x14AUDIT_STATUS_EXPIRED\x10\x06*\x86\x01\n" +
	"\n" +
	"AuditLevel\x12\x1b\n" +
	"\x17AUDIT_LEVEL_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fAUDIT_LEVEL_LOW\x10\x01\x12\x16\n" +
	"\x12AUDIT_LEVEL_MEDIUM\x10\x02\x12\x14\n" +
	"\x10AUDIT_LEVEL_HIGH\x10\x03\x12\x18\n" +
	"\x14AUDIT_LEVEL_CRITICAL\x10\x042\xea\b\n" +
	"\fAuditService\x12P\n" +
	"\rSubmitContent\x12\x1e.audit.v1.SubmitContentRequest\x1a\x1f.audit.v1.SubmitContentResponse\x12S\n" +
	"\x0eGetAuditResult\x12\x1f.audit.v1.GetAuditResultRequest\x1a .audit.v1.GetAuditResultResponse\x12\\\n" +
	"\x11UpdateAuditStatus\x12\".audit.v1.UpdateAuditStatusRequest\x1a#.audit.v1.UpdateAuditStatusResponse\x12Y\n" +
	"\x10ListAuditRecords\x12!.audit.v1.ListAuditRecordsRequest\x1a\".audit.v1.ListAuditRecordsResponse\x12S\n" +
	"\x0eAddToWhitelist\x12\x1f.audit.v1.AddToWhitelistRequest\x1a .audit.v1.AddToWhitelistResponse\x12b\n" +
	"\x13RemoveFromWhitelist\x12$.audit.v1.RemoveFromWhitelistRequest\x1a%.audit.v1.RemoveFromWhitelistResponse\x12S\n" +
	"\x0eAddToBlacklist\x12\x1f.audit.v1.AddToBlacklistRequest\x1a .audit.v1.AddToBlacklistResponse\x12b\n" +
	"\x13RemoveFromBlacklist\x12$.audit.v1.RemoveFromBlacklistRequest\x1a%.audit.v1.RemoveFromBlacklistResponse\x12e\n" +
	"\x14GetManualReviewQueue\x12%.audit.v1.GetManualReviewQueueRequest\x1a&.audit.v1.GetManualReviewQueueResponse\x12_\n" +
	"\x12AssignManualReview\x12#.audit.v1.AssignManualReviewRequest\x1a$.audit.v1.AssignManualReviewResponse\x12_\n" +
	"\x12GetAuditStatistics\x12#.audit.v1.GetAuditStatisticsRequest\x1a$.audit.v1.GetAuditStatisticsResponse\x12_\n" +
	"\x12GetViolationTrends\x12#.audit.v1.GetViolationTrendsRequest\x1a$.audit.v1.GetViolationTrendsResponseB>Z<github.com/vision_world/audit_service/proto/audit/v1;auditv1b\x06proto3"

var (
	file_proto_audit_v1_audit_proto_rawDescOnce sync.Once
	file_proto_audit_v1_audit_proto_rawDescData []byte
)

func file_proto_audit_v1_audit_proto_rawDescGZIP() []byte {
	file_proto_audit_v1_audit_proto_rawDescOnce.Do(func() {
		file_proto_audit_v1_audit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_audit_v1_audit_proto_rawDesc), len(file_proto_audit_v1_audit_proto_rawDesc)))
	})
	return file_proto_audit_v1_audit_proto_rawDescData
}

var file_proto_audit_v1_audit_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_audit_v1_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_proto_audit_v1_audit_proto_goTypes = []any{
	(ContentType)(0),                     // 0: audit.v1.ContentType
	(AuditStatus)(0),                     // 1: audit.v1.AuditStatus
	(AuditLevel)(0),                      // 2: audit.v1.AuditLevel
	(*SubmitContentRequest)(nil),         // 3: audit.v1.SubmitContentRequest
	(*SubmitContentResponse)(nil),        // 4: audit.v1.SubmitContentResponse
	(*GetAuditResultRequest)(nil),        // 5: audit.v1.GetAuditResultRequest
	(*GetAuditResultResponse)(nil),       // 6: audit.v1.GetAuditResultResponse
	(*UpdateAuditStatusRequest)(nil),     // 7: audit.v1.UpdateAuditStatusRequest
	(*UpdateAuditStatusResponse)(nil),    // 8: audit.v1.UpdateAuditStatusResponse
	(*ListAuditRecordsRequest)(nil),      // 9: audit.v1.ListAuditRecordsRequest
	(*AuditRecord)(nil),                  // 10: audit.v1.AuditRecord
	(*ListAuditRecordsResponse)(nil),     // 11: audit.v1.ListAuditRecordsResponse
	(*AddToWhitelistRequest)(nil),        // 12: audit.v1.AddToWhitelistRequest
	(*AddToWhitelistResponse)(nil),       // 13: audit.v1.AddToWhitelistResponse
	(*RemoveFromWhitelistRequest)(nil),   // 14: audit.v1.RemoveFromWhitelistRequest
	(*RemoveFromWhitelistResponse)(nil),  // 15: audit.v1.RemoveFromWhitelistResponse
	(*AddToBlacklistRequest)(nil),        // 16: audit.v1.AddToBlacklistRequest
	(*AddToBlacklistResponse)(nil),       // 17: audit.v1.AddToBlacklistResponse
	(*RemoveFromBlacklistRequest)(nil),   // 18: audit.v1.RemoveFromBlacklistRequest
	(*RemoveFromBlacklistResponse)(nil),  // 19: audit.v1.RemoveFromBlacklistResponse
	(*GetManualReviewQueueRequest)(nil),  // 20: audit.v1.GetManualReviewQueueRequest
	(*GetManualReviewQueueResponse)(nil), // 21: audit.v1.GetManualReviewQueueResponse
	(*AssignManualReviewRequest)(nil),    // 22: audit.v1.AssignManualReviewRequest
	(*AssignManualReviewResponse)(nil),   // 23: audit.v1.AssignManualReviewResponse
	(*StatusCount)(nil),                  // 24: audit.v1.StatusCount
	(*LevelCount)(nil),                   // 25: audit.v1.LevelCount
	(*TypeCount)(nil),                    // 26: audit.v1.TypeCount
	(*GetAuditStatisticsRequest)(nil),    // 27: audit.v1.GetAuditStatisticsRequest
	(*GetAuditStatisticsResponse)(nil),   // 28: audit.v1.GetAuditStatisticsResponse
	(*ViolationTrend)(nil),               // 29: audit.v1.ViolationTrend
	(*GetViolationTrendsRequest)(nil),    // 30: audit.v1.GetViolationTrendsRequest
	(*GetViolationTrendsResponse)(nil),   // 31: audit.v1.GetViolationTrendsResponse
	nil,                                  // 32: audit.v1.SubmitContentRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),        // 33: google.protobuf.Timestamp
}
var file_proto_audit_v1_audit_proto_depIdxs = []int32{
	0,  // 0: audit.v1.SubmitContentRequest.content_type:type_name -> audit.v1.ContentType
	32, // 1: audit.v1.SubmitContentRequest.metadata:type_name -> audit.v1.SubmitContentRequest.MetadataEntry
	1,  // 2: audit.v1.SubmitContentResponse.status:type_name -> audit.v1.AuditStatus
	2,  // 3: audit.v1.SubmitContentResponse.level:type_name -> audit.v1.AuditLevel
	33, // 4: audit.v1.SubmitContentResponse.created_at:type_name -> google.protobuf.Timestamp
	0,  // 5: audit.v1.GetAuditResultResponse.content_type:type_name -> audit.v1.ContentType
	1,  // 6: audit.v1.GetAuditResultResponse.status:type_name -> audit.v1.AuditStatus
	2,  // 7: audit.v1.GetAuditResultResponse.level:type_name -> audit.v1.AuditLevel
	33, // 8: audit.v1.GetAuditResultResponse.reviewed_at:type_name -> google.protobuf.Timestamp
	33, // 9: audit.v1.GetAuditResultResponse.created_at:type_name -> google.protobuf.Timestamp
	1,  // 10: audit.v1.UpdateAuditStatusRequest.status:type_name -> audit.v1.AuditStatus
	0,  // 11: audit.v1.ListAuditRecordsRequest.content_type:type_name -> audit.v1.ContentType
	1,  // 12: audit.v1.ListAuditRecordsRequest.status:type_name -> audit.v1.AuditStatus
	2,  // 13: audit.v1.ListAuditRecordsRequest.level:type_name -> audit.v1.AuditLevel
	0,  // 14: audit.v1.AuditRecord.content_type:type_name -> audit.v1.ContentType
	1,  // 15: audit.v1.AuditRecord.status:type_name -> audit.v1.AuditStatus
	2,  // 16: audit.v1.AuditRecord.level:type_name -> audit.v1.AuditLevel
	33, // 17: audit.v1.AuditRecord.created_at:type_name -> google.protobuf.Timestamp
	33, // 18: audit.v1.AuditRecord.reviewed_at:type_name -> google.protobuf.Timestamp
	10, // 19: audit.v1.ListAuditRecordsResponse.records:type_name -> audit.v1.AuditRecord
	0,  // 20: audit.v1.AddToWhitelistRequest.content_type:type_name -> audit.v1.ContentType
	0,  // 21: audit.v1.AddToBlacklistRequest.content_type:type_name -> audit.v1.ContentType
	0,  // 22: audit.v1.GetManualReviewQueueRequest.content_type:type_name -> audit.v1.ContentType
	2,  // 23: audit.v1.GetManualReviewQueueRequest.level:type_name -> audit.v1.AuditLevel
	10, // 24: audit.v1.GetManualReviewQueueResponse.records:type_name -> audit.v1.AuditRecord
	1,  // 25: audit.v1.StatusCount.status:type_name -> audit.v1.AuditStatus
	2,  // 26: audit.v1.LevelCount.level:type_name -> audit.v1.AuditLevel
	0,  // 27: audit.v1.TypeCount.content_type:type_name -> audit.v1.ContentType
	24, // 28: audit.v1.GetAuditStatisticsResponse.status_stats:type_name -> audit.v1.StatusCount
	25, // 29: audit.v1.GetAuditStatisticsResponse.level_stats:type_name -> audit.v1.LevelCount
	26, // 30: audit.v1.GetAuditStatisticsResponse.type_stats:type_name -> audit.v1.TypeCount
	29, // 31: audit.v1.GetViolationTrendsResponse.trends:type_name -> audit.v1.ViolationTrend
	3,  // 32: audit.v1.AuditService.SubmitContent:input_type -> audit.v1.SubmitContentRequest
	5,  // 33: audit.v1.AuditService.GetAuditResult:input_type -> audit.v1.GetAuditResultRequest
	7,  // 34: audit.v1.AuditService.UpdateAuditStatus:input_type -> audit.v1.UpdateAuditStatusRequest
	9,  // 35: audit.v1.AuditService.ListAuditRecords:input_type -> audit.v1.ListAuditRecordsRequest
	12, // 36: audit.v1.AuditService.AddToWhitelist:input_type -> audit.v1.AddToWhitelistRequest
	14, // 37: audit.v1.AuditService.RemoveFromWhitelist:input_type -> audit.v1.RemoveFromWhitelistRequest
	16, // 38: audit.v1.AuditService.AddToBlacklist:input_type -> audit.v1.AddToBlacklistRequest
	18, // 39: audit.v1.AuditService.RemoveFromBlacklist:input_type -> audit.v1.RemoveFromBlacklistRequest
	20, // 40: audit.v1.AuditService.GetManualReviewQueue:input_type -> audit.v1.GetManualReviewQueueRequest
	22, // 41: audit.v1.AuditService.AssignManualReview:input_type -> audit.v1.AssignManualReviewRequest
	27, // 42: audit.v1.AuditService.GetAuditStatistics:input_type -> audit.v1.GetAuditStatisticsRequest
	30, // 43: audit.v1.AuditService.GetViolationTrends:input_type -> audit.v1.GetViolationTrendsRequest
	4,  // 44: audit.v1.AuditService.SubmitContent:output_type -> audit.v1.SubmitContentResponse
	6,  // 45: audit.v1.AuditService.GetAuditResult:output_type -> audit.v1.GetAuditResultResponse
	8,  // 46: audit.v1.AuditService.UpdateAuditStatus:output_type -> audit.v1.UpdateAuditStatusResponse
	11, // 47: audit.v1.AuditService.ListAuditRecords:output_type -> audit.v1.ListAuditRecordsResponse
	13, // 48: audit.v1.AuditService.AddToWhitelist:output_type -> audit.v1.AddToWhitelistResponse
	15, // 49: audit.v1.AuditService.RemoveFromWhitelist:output_type -> audit.v1.RemoveFromWhitelistResponse
	17, // 50: audit.v1.AuditService.AddToBlacklist:output_type -> audit.v1.AddToBlacklistResponse
	19, // 51: audit.v1.AuditService.RemoveFromBlacklist:output_type -> audit.v1.RemoveFromBlacklistResponse
	21, // 52: audit.v1.AuditService.GetManualReviewQueue:output_type -> audit.v1.GetManualReviewQueueResponse
	23, // 53: audit.v1.AuditService.AssignManualReview:output_type -> audit.v1.AssignManualReviewResponse
	28, // 54: audit.v1.AuditService.GetAuditStatistics:output_type -> audit.v1.GetAuditStatisticsResponse
	31, // 55: audit.v1.AuditService.GetViolationTrends:output_type -> audit.v1.GetViolationTrendsResponse
	44, // [44:56] is the sub-list for method output_type
	32, // [32:44] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_proto_audit_v1_audit_proto_init() }
func file_proto_audit_v1_audit_proto_init() {
	if File_proto_audit_v1_audit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_audit_v1_audit_proto_rawDesc), len(file_proto_audit_v1_audit_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_audit_v1_audit_proto_goTypes,
		DependencyIndexes: file_proto_audit_v1_audit_proto_depIdxs,
		EnumInfos:         file_proto_audit_v1_audit_proto_enumTypes,
		MessageInfos:      file_proto_audit_v1_audit_proto_msgTypes,
	}.Build()
	File_proto_audit_v1_audit_proto = out.File
	file_proto_audit_v1_audit_proto_goTypes = nil
	file_proto_audit_v1_audit_proto_depIdxs = nil
}
