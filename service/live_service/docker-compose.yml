version: '3.8'

services:
  live-service:
    build: .
    container_name: live-service
    ports:
      - "8080:8080"
    environment:
      - ENV=production
      - LOG_LEVEL=info
    volumes:
      - ./config:/root/config
      - ./logs:/root/logs
    depends_on:
      - mysql
      - redis
    networks:
      - live-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    container_name: live-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: live_service
      MYSQL_USER: liveuser
      MYSQL_PASSWORD: livepassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - live-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: live-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - live-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: live-nginx
    ports:
      - "80:80"
      - "1935:1935"  # RTMP端口
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - live-service
    networks:
      - live-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  live-network:
    driver: bridge